// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ImageBuilder.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Purchase plan configuration for platform image.
    /// </summary>
    public partial class PlatformImagePurchasePlan
    {
        /// <summary>
        /// Initializes a new instance of the PlatformImagePurchasePlan class.
        /// </summary>
        public PlatformImagePurchasePlan()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PlatformImagePurchasePlan class.
        /// </summary>
        /// <param name="planName">Name of the purchase plan.</param>
        /// <param name="planProduct">Product of the purchase plan.</param>
        /// <param name="planPublisher">Publisher of the purchase plan.</param>
        public PlatformImagePurchasePlan(string planName, string planProduct, string planPublisher)
        {
            PlanName = planName;
            PlanProduct = planProduct;
            PlanPublisher = planPublisher;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the purchase plan.
        /// </summary>
        [JsonProperty(PropertyName = "planName")]
        public string PlanName { get; set; }

        /// <summary>
        /// Gets or sets product of the purchase plan.
        /// </summary>
        [JsonProperty(PropertyName = "planProduct")]
        public string PlanProduct { get; set; }

        /// <summary>
        /// Gets or sets publisher of the purchase plan.
        /// </summary>
        [JsonProperty(PropertyName = "planPublisher")]
        public string PlanPublisher { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (PlanName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PlanName");
            }
            if (PlanProduct == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PlanProduct");
            }
            if (PlanPublisher == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PlanPublisher");
            }
        }
    }
}
