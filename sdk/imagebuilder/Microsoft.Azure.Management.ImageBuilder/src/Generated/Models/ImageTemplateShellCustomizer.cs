// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ImageBuilder.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Runs a shell script during the customization phase (Linux). Corresponds
    /// to Packer shell provisioner. Exactly one of 'scriptUri' or 'inline' can
    /// be specified.
    /// </summary>
    [Newtonsoft.Json.JsonObject("Shell")]
    public partial class ImageTemplateShellCustomizer : ImageTemplateCustomizer
    {
        /// <summary>
        /// Initializes a new instance of the ImageTemplateShellCustomizer
        /// class.
        /// </summary>
        public ImageTemplateShellCustomizer()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ImageTemplateShellCustomizer
        /// class.
        /// </summary>
        /// <param name="name">Friendly Name to provide context on what this
        /// customization step does</param>
        /// <param name="scriptUri">URI of the shell script to be run for
        /// customizing. It can be a github link, SAS URI for Azure Storage,
        /// etc</param>
        /// <param name="sha256Checksum">SHA256 checksum of the shell script
        /// provided in the scriptUri field</param>
        /// <param name="inline">Array of shell commands to execute</param>
        public ImageTemplateShellCustomizer(string name = default(string), string scriptUri = default(string), string sha256Checksum = default(string), IList<string> inline = default(IList<string>))
            : base(name)
        {
            ScriptUri = scriptUri;
            Sha256Checksum = sha256Checksum;
            Inline = inline;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets URI of the shell script to be run for customizing. It
        /// can be a github link, SAS URI for Azure Storage, etc
        /// </summary>
        [JsonProperty(PropertyName = "scriptUri")]
        public string ScriptUri { get; set; }

        /// <summary>
        /// Gets or sets SHA256 checksum of the shell script provided in the
        /// scriptUri field
        /// </summary>
        [JsonProperty(PropertyName = "sha256Checksum")]
        public string Sha256Checksum { get; set; }

        /// <summary>
        /// Gets or sets array of shell commands to execute
        /// </summary>
        [JsonProperty(PropertyName = "inline")]
        public IList<string> Inline { get; set; }

    }
}
