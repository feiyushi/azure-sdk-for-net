// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ImageBuilder.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Installs Windows Updates. Corresponds to Packer Windows Update
    /// Provisioner (https://github.com/rgl/packer-provisioner-windows-update)
    /// </summary>
    [Newtonsoft.Json.JsonObject("WindowsUpdate")]
    public partial class ImageTemplateWindowsUpdateCustomizer : ImageTemplateCustomizer
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ImageTemplateWindowsUpdateCustomizer class.
        /// </summary>
        public ImageTemplateWindowsUpdateCustomizer()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ImageTemplateWindowsUpdateCustomizer class.
        /// </summary>
        /// <param name="name">Friendly Name to provide context on what this
        /// customization step does</param>
        /// <param name="searchCriteria">Criteria to search updates. Omit or
        /// specify empty string to use the default (search all). Refer to
        /// above link for examples and detailed description of this
        /// field.</param>
        /// <param name="filters">Array of filters to select updates to apply.
        /// Omit or specify empty array to use the default (no filter). Refer
        /// to above link for examples and detailed description of this
        /// field.</param>
        /// <param name="updateLimit">Maximum number of updates to apply at a
        /// time. Omit or specify 0 to use the default (1000)</param>
        public ImageTemplateWindowsUpdateCustomizer(string name = default(string), string searchCriteria = default(string), IList<string> filters = default(IList<string>), int? updateLimit = default(int?))
            : base(name)
        {
            SearchCriteria = searchCriteria;
            Filters = filters;
            UpdateLimit = updateLimit;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets criteria to search updates. Omit or specify empty
        /// string to use the default (search all). Refer to above link for
        /// examples and detailed description of this field.
        /// </summary>
        [JsonProperty(PropertyName = "searchCriteria")]
        public string SearchCriteria { get; set; }

        /// <summary>
        /// Gets or sets array of filters to select updates to apply. Omit or
        /// specify empty array to use the default (no filter). Refer to above
        /// link for examples and detailed description of this field.
        /// </summary>
        [JsonProperty(PropertyName = "filters")]
        public IList<string> Filters { get; set; }

        /// <summary>
        /// Gets or sets maximum number of updates to apply at a time. Omit or
        /// specify 0 to use the default (1000)
        /// </summary>
        [JsonProperty(PropertyName = "updateLimit")]
        public int? UpdateLimit { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (UpdateLimit < 0)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "UpdateLimit", 0);
            }
        }
    }
}
