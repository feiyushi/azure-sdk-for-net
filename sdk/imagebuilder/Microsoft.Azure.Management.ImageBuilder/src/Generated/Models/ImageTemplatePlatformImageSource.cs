// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Imagebuilder.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Describes an image source from [Azure Gallery
    /// Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).
    /// </summary>
    [Newtonsoft.Json.JsonObject("PlatformImage")]
    public partial class ImageTemplatePlatformImageSource : ImageTemplateSource
    {
        /// <summary>
        /// Initializes a new instance of the ImageTemplatePlatformImageSource
        /// class.
        /// </summary>
        public ImageTemplatePlatformImageSource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ImageTemplatePlatformImageSource
        /// class.
        /// </summary>
        /// <param name="publisher">Image Publisher in [Azure Gallery
        /// Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).</param>
        /// <param name="offer">Image offer from the [Azure Gallery
        /// Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).</param>
        /// <param name="sku">Image sku from the [Azure Gallery
        /// Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).</param>
        /// <param name="version">Image version from the [Azure Gallery
        /// Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).</param>
        /// <param name="planInfo">Optional configuration of purchase plan for
        /// platform image.</param>
        public ImageTemplatePlatformImageSource(string publisher = default(string), string offer = default(string), string sku = default(string), string version = default(string), PlatformImagePurchasePlan planInfo = default(PlatformImagePurchasePlan))
        {
            Publisher = publisher;
            Offer = offer;
            Sku = sku;
            Version = version;
            PlanInfo = planInfo;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets image Publisher in [Azure Gallery
        /// Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).
        /// </summary>
        [JsonProperty(PropertyName = "publisher")]
        public string Publisher { get; set; }

        /// <summary>
        /// Gets or sets image offer from the [Azure Gallery
        /// Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).
        /// </summary>
        [JsonProperty(PropertyName = "offer")]
        public string Offer { get; set; }

        /// <summary>
        /// Gets or sets image sku from the [Azure Gallery
        /// Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).
        /// </summary>
        [JsonProperty(PropertyName = "sku")]
        public string Sku { get; set; }

        /// <summary>
        /// Gets or sets image version from the [Azure Gallery
        /// Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public string Version { get; set; }

        /// <summary>
        /// Gets or sets optional configuration of purchase plan for platform
        /// image.
        /// </summary>
        [JsonProperty(PropertyName = "planInfo")]
        public PlatformImagePurchasePlan PlanInfo { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (PlanInfo != null)
            {
                PlanInfo.Validate();
            }
        }
    }
}
