// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ImageBuilder.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Generic distribution object
    /// </summary>
    public partial class ImageTemplateDistributor
    {
        /// <summary>
        /// Initializes a new instance of the ImageTemplateDistributor class.
        /// </summary>
        public ImageTemplateDistributor()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ImageTemplateDistributor class.
        /// </summary>
        /// <param name="runOutputName">The name to be used for the associated
        /// RunOutput.</param>
        /// <param name="artifactTags">Tags that will be applied to the
        /// artifact once it has been created/updated by the
        /// distributor.</param>
        public ImageTemplateDistributor(string runOutputName, IDictionary<string, string> artifactTags = default(IDictionary<string, string>))
        {
            RunOutputName = runOutputName;
            ArtifactTags = artifactTags;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name to be used for the associated RunOutput.
        /// </summary>
        [JsonProperty(PropertyName = "runOutputName")]
        public string RunOutputName { get; set; }

        /// <summary>
        /// Gets or sets tags that will be applied to the artifact once it has
        /// been created/updated by the distributor.
        /// </summary>
        [JsonProperty(PropertyName = "artifactTags")]
        public IDictionary<string, string> ArtifactTags { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (RunOutputName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "RunOutputName");
            }
            if (RunOutputName != null)
            {
                if (!System.Text.RegularExpressions.Regex.IsMatch(RunOutputName, "^[A-Za-z0-9-_.]{1,64}$"))
                {
                    throw new ValidationException(ValidationRules.Pattern, "RunOutputName", "^[A-Za-z0-9-_.]{1,64}$");
                }
            }
        }
    }
}
